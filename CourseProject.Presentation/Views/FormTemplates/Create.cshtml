@using System.Collections
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CourseProject.Presentation.ViewModels.FormTemplateViewModels.FormTemplateRequestViewModel

<div class="container mt-5">
    <h2 class="mb-4">Create New Form Template</h2>
    <form asp-action="Create" asp-controller="FormTemplates" method="post" class="needs-validation" novalidate>
        <div class="row">
            <div class="col-md-6 form-group">
                <label>User</label>
                <input type="text" asp-for="CreatorUserName" class="form-control" value="@User.Identity.Name" readonly />
            </div>
            <div class="col-md-6 form-group">
                <label>Date</label>
                <input type="text" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Title"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Description"></label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="row">
            <div class="col-md-6 form-group">
                <label asp-for="TopicId">Topic</label>
                <select asp-for="TopicId" class="form-control" asp-items="@(new SelectList((IEnumerable)ViewBag.AllTopics, "Id", "Name"))"></select>
                <span asp-validation-for="TopicId" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-group">
                <label asp-for="SelectedTagIds">Tags</label>
                <select asp-for="SelectedTagIds" class="form-control" asp-items="@(new SelectList((IEnumerable)ViewBag.Tags, "Id", "Name"))" multiple="multiple"></select>
            </div>
        </div>

        <div class="form-group form-check">
            <input asp-for="IsPublic" class="form-check-input" />
            <label asp-for="IsPublic" class="form-check-label">Is Public</label>
        </div>

        <div class="form-group">
            <label asp-for="ImageUrl">Image URL</label>
            <input asp-for="ImageUrl" class="form-control" type="url" />
        </div>

        <h3 class="mt-4">Questions</h3>
        <div id="questions-container" class="sortable"></div>
        <button type="button" class="btn btn-outline-primary mt-3" onclick="addQuestion()">Add Question</button>

        <button type="submit" class="btn btn-primary mt-3">Create</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    function updateTopicName(selectElement) {
        const selectedOption = selectElement.options[selectElement.selectedIndex];
        const topicNameInput = document.querySelector('input[name="Topic.Name"]');
        if (topicNameInput) {
            topicNameInput.value = selectedOption.text;
        }
    }
    
    let questionCount = 0;

    function addQuestion() {
        const container = document.getElementById('questions-container');
        const questionHtml = `
            <div class="question-group" id="question-${questionCount}" draggable="true" ondragstart="drag(event)">
                <label>Question Title</label>
                <input name="Questions[${questionCount}].Title" class="form-control mb-2" required />

                <label>Description (optional)</label>
                <textarea name="Questions[${questionCount}].Description" class="form-control mb-2"></textarea>

                <label for="Questions[${questionCount}].Type">Question Type</label>
                <select name="Questions[${questionCount}].Type" class="form-control mb-2" onchange="updateQuestionInput(${questionCount})">
                    <option value="SingleLine">Single Line</option>
                    <option value="MultiLine">Multi Line</option>
                    <option value="Integer">Integer</option>
                    <option value="Checkbox">Checkbox</option>
                </select>

                <div class="dynamic-input mb-2" id="dynamic-input-${questionCount}"></div>

                <button type="button" class="btn btn-danger btn-sm" onclick="removeQuestion(this)">Remove Question</button>
            </div>`;
        container.insertAdjacentHTML('beforeend', questionHtml);
        questionCount++;
    }

    function updateQuestionInput(index) {
        const dynamicInputContainer = document.getElementById(`dynamic-input-${index}`);
        dynamicInputContainer.innerHTML = '';
    }

    function removeQuestion(button) {
        button.parentElement.remove();
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    document.getElementById('questions-container').addEventListener('dragover', (ev) => {
        ev.preventDefault();
    });

    document.getElementById('questions-container').addEventListener('drop', (ev) => {
        ev.preventDefault();
        const data = ev.dataTransfer.getData("text");
        const draggedElement = document.getElementById(data);
        const targetElement = ev.target.closest('.question-group');
        if (targetElement && draggedElement) {
            targetElement.before(draggedElement);
        }
    });

    /*$(document).ready(function () {
        // Загрузка данных из ViewBag.Tags, переданного с сервера
        const tagsData = @Html.Raw(Json.Serialize(ViewBag.Tags));

        // Инициализация select2 для выбора и создания тегов
        $('#tags-selector').select2({
            tags: true,
            data: tagsData,
            placeholder: 'Add tags',
            allowClear: true,
            createTag: function (params) {
                const term = $.trim(params.term);
                if (term === '') {
                    return null;
                }
                return {
                    id: term,
                    text: term,
                    newTag: true
                };
            }
        }).on('change', function (e) {
            // Обновляем скрытое поле с выбранными тегами
            const selectedTags = $(this).val();
            $('#tags-input').val(selectedTags ? selectedTags.join(',') : '');
        });
    });*/
</script>

<style>
    .question-group {
        border: 1px solid #dee2e6;
        padding: 1rem;
        border-radius: 0.25rem;
        margin-bottom: 1rem;
        background-color: #f8f9fa;
    }
</style>

