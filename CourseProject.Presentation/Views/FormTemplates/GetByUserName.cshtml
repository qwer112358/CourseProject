@model CourseProject.Presentation.ViewModels.SearchViewModel
@using CourseProject.Domain.Models;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject SignInManager<ApplicationUser> signInManager

<div class="container mt-5">
    <h2 class="mb-4">Form Templates</h2>

    <!-- Search form -->
    @{ Html.RenderPartial("_SearchForm", Model); }

    @if (signInManager.IsSignedIn(User))
    {
        <form asp-controller="Salesforce" asp-action="ExportUserToSalesforce" method="post">
            <button type="submit" class="btn btn-success mt-3">
                <i class="fas fa-cloud-upload-alt"></i> Экспортировать в Salesforce
            </button>
        </form>
        
        <a asp-controller="FormTemplates" asp-action="Create" class="btn btn-primary mb-3">Create New Form Template</a>
    }

    <!-- Templates table -->
    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th>Title</th>
                    <th>Topic</th>
                    <th>Public</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.FormTemplates.Any())
                {
                    <tr>
                        <td colspan="4" class="text-center">No templates found.</td>
                    </tr>
                }
                else
                {
                    foreach (var formTemplate in Model.FormTemplates)
                    {
                        <tr>
                            <td>@formTemplate.Title</td>
                            <td>@formTemplate.Topic?.Name</td>
                            <td>@(formTemplate.IsPublic ? "Yes" : "No")</td>
                            <td>
                                <a href="@Url.Action("Details", new { id = formTemplate.Id })" class="btn btn-link">
                                    <i class="fas fa-eye"></i> View
                                </a>
                                @if (signInManager.IsSignedIn(User))
                                {
                                    <a href="@Url.Action("Edit", new { id = formTemplate.Id })" class="btn btn-warning">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = formTemplate.Id })" class="btn btn-danger">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </a>
                                }
                                <span id="likesCount_@formTemplate.Id">Likes: @(formTemplate.LikeCount)</span>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
